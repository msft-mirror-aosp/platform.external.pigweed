# Copyright 2024 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

load(
    "@fuchsia_sdk//fuchsia:defs.bzl",
    "fuchsia_select",
)

package(default_visibility = ["//visibility:public"])

exports_files(glob(["**/*"]))

cc_library(
    name = "common",
    srcs = [
        "advertising_data.cc",
        "bounded_inspect_list_node.cc",
        "byte_buffer.cc",
        "device_address.cc",
        "device_class.cc",
        "host_error.cc",
        "identifier.cc",
        "log.cc",
        "manufacturer_names.cc",
        "metrics.cc",
        "random.cc",
        "retire_log.cc",
        "slab_allocator.cc",
        "supplement_data.cc",
        "uuid.cc",
    ],
    copts = ["-Wswitch-enum"],
    # This library is not compatible with --config=rp2040.
    target_compatible_with = select({
        "@platforms//os:fuchsia": [],
        "@platforms//os:linux": [],
        "@platforms//os:macos": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
    deps = [
        "//pw_bluetooth_sapphire:config",
        "//pw_bluetooth_sapphire:public",
        "//pw_bluetooth_sapphire/lib/cpp-string",
        "//pw_bluetooth_sapphire/lib/cpp-type",
        "@pigweed//pw_assert",
        "@pigweed//pw_async:dispatcher",
        "@pigweed//pw_async:task",
        "@pigweed//pw_bluetooth:emboss_hci",
        "@pigweed//pw_intrusive_ptr",
        "@pigweed//pw_log",
        "@pigweed//pw_random",
        "@pigweed//pw_span",
        "@pigweed//pw_string",
        "@pigweed//pw_string:utf_codecs",
        "@pigweed//third_party/fuchsia:fit",
    ] + fuchsia_select({
        "@platforms//os:fuchsia": [
            "@fuchsia_sdk//pkg/inspect_component_cpp",
            "@fuchsia_sdk//pkg/trace",
        ],
        "//conditions:default": [],
    }),
)

cc_library(
    name = "uuid_string_util",
    srcs = ["uuid_string_util.cc"],
    deps = [":common"],
)

cc_library(
    name = "common_test.lib",
    testonly = True,
    srcs = [
        "advertising_data_test.cc",
        "bounded_inspect_list_node_test.cc",
        "byte_buffer_test.cc",
        "device_address_test.cc",
        "device_class_test.cc",
        "error_test.cc",
        "expiring_set_test.cc",
        "identifier_test.cc",
        "inspectable_test.cc",
        "manufacturer_names_test.cc",
        "metrics_test.cc",
        "packet_view_test.cc",
        "pipeline_monitor_test.cc",
        "retire_log_test.cc",
        "slab_allocator_test.cc",
        "supplement_data_test.cc",
        "uuid_test.cc",
        "weak_self_test.cc",
        "windowed_inspect_numeric_property_test.cc",
    ],
    tags = ["manual"],
    visibility = ["//visibility:public"],
    deps = [
        ":common",
        ":uuid_string_util",
        "//pw_bluetooth_sapphire/host/testing",
        "//pw_bluetooth_sapphire/host/testing:gtest_main",
        "@pigweed//pw_async:fake_dispatcher_fixture",
    ],
)
