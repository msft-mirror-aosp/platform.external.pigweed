# Copyright 2024 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

load("@pigweed//pw_build:pigweed.bzl", "pw_cc_test")
load("//pw_bluetooth_sapphire/host:variables.bzl", "COPTS")

package(default_visibility = ["//visibility:public"])

exports_files(glob(["**/*"]))

cc_library(
    name = "hci",
    srcs = [
        "acl_connection.cc",
        "advertising_handle_map.cc",
        "android_extended_low_energy_advertiser.cc",
        "bredr_connection.cc",
        "bredr_connection_request.cc",
        "connection.cc",
        "extended_low_energy_advertiser.cc",
        "extended_low_energy_scanner.cc",
        "legacy_low_energy_advertiser.cc",
        "legacy_low_energy_scanner.cc",
        "low_energy_advertiser.cc",
        "low_energy_connection.cc",
        "low_energy_connector.cc",
        "low_energy_scanner.cc",
        "sco_connection.cc",
        "sequential_command_runner.cc",
    ],
    copts = [
        "-Wno-unused-parameter",
        "-Wno-deprecated-this-capture",
        "-Wswitch-enum",
    ] + COPTS,
    deps = [
        "//pw_bluetooth_sapphire:public",
        "//pw_bluetooth_sapphire/host/transport",
        "@pigweed//pw_async:heap_dispatcher",
        "@pigweed//pw_bluetooth:emboss_hci",
        "@pigweed//third_party/fuchsia:fit",
    ],
)

cc_library(
    name = "testing",
    srcs = [
        "fake_bredr_connection.cc",
        "fake_local_address_delegate.cc",
        "fake_low_energy_connection.cc",
        "fake_sco_connection.cc",
    ],
    copts = COPTS,
    deps = [
        ":hci",
        "//pw_bluetooth_sapphire:public",
        "//pw_bluetooth_sapphire/host/common",
        "@pigweed//pw_async:heap_dispatcher",
    ],
)

cc_library(
    name = "hci_test.lib",
    testonly = True,
    srcs = [
        "advertising_handle_map_test.cc",
        "connection_test.cc",
        "extended_low_energy_advertiser_test.cc",
        "extended_low_energy_scanner_test.cc",
        "legacy_low_energy_advertiser_test.cc",
        "legacy_low_energy_scanner_test.cc",
        "low_energy_advertiser_test.cc",
        "low_energy_connector_test.cc",
        "low_energy_multiple_advertising_test.cc",
        "low_energy_scanner_test.cc",
        "sequential_command_runner_test.cc",
    ],
    copts = COPTS,
    tags = ["manual"],
    visibility = ["//visibility:public"],
    deps = [
        ":hci",
        ":testing",
        "//pw_bluetooth_sapphire/host/testing",
        "//pw_bluetooth_sapphire/host/testing:gtest_main",
        "@pigweed//pw_bluetooth:emboss_hci_test",
    ],
    alwayslink = 1,
)

pw_cc_test(
    name = "hci-spec_test",
    srcs = [
        "advertising_handle_map_test.cc",
        "connection_test.cc",
        "extended_low_energy_advertiser_test.cc",
        "extended_low_energy_scanner_test.cc",
        "legacy_low_energy_advertiser_test.cc",
        "legacy_low_energy_scanner_test.cc",
        "low_energy_advertiser_test.cc",
        "low_energy_connector_test.cc",
        "low_energy_multiple_advertising_test.cc",
        "low_energy_scanner_test.cc",
        "sequential_command_runner_test.cc",
    ],
    copts = COPTS,
    test_main = "//pw_bluetooth_sapphire/host/testing:gtest_main",
    deps = [
        ":hci",
        ":testing",
        "//pw_bluetooth_sapphire/host/testing",
        "@pigweed//pw_bluetooth:emboss_hci_test",
    ],
)
