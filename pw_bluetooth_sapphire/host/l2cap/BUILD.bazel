# Copyright 2024 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

load(
    "@fuchsia_sdk//fuchsia:defs.bzl",
    "fuchsia_cc_test",
    "fuchsia_unittest_package",
)

package(default_visibility = ["//visibility:public"])

cc_library(
    name = "definitions",
    # TODO: https://pwbug.dev/313665184 - Re-enable for all platforms once Mac
    # builder issue is resolved.
    target_compatible_with = ["@platforms//os:linux"],
    deps = [
        "//pw_bluetooth_sapphire:public",
        "//pw_bluetooth_sapphire/host/hci-spec",
        "//pw_bluetooth_sapphire/host/sm:definitions",
    ],
)

cc_library(
    name = "l2cap",
    srcs = [
        "a2dp_offload_manager.cc",
        "basic_mode_rx_engine.cc",
        "basic_mode_tx_engine.cc",
        "bredr_command_handler.cc",
        "bredr_dynamic_channel.cc",
        "bredr_signaling_channel.cc",
        "channel.cc",
        "channel_configuration.cc",
        "channel_manager.cc",
        "command_handler.cc",
        "credit_based_flow_control_rx_engine.cc",
        "credit_based_flow_control_tx_engine.cc",
        "dynamic_channel.cc",
        "dynamic_channel_registry.cc",
        "enhanced_retransmission_mode_engines.cc",
        "enhanced_retransmission_mode_rx_engine.cc",
        "enhanced_retransmission_mode_tx_engine.cc",
        "fcs.cc",
        "fragmenter.cc",
        "le_signaling_channel.cc",
        "logical_link.cc",
        "low_energy_command_handler.cc",
        "pdu.cc",
        "recombiner.cc",
        "scoped_channel.cc",
        "signaling_channel.cc",
        "types.cc",
    ],
    copts = [
        "-Wno-unused-parameter",
    ],
    target_compatible_with = ["@platforms//os:linux"],
    deps = [
        ":definitions",
        "//pw_bluetooth:emboss_l2cap_frames",
        "//pw_bluetooth_sapphire:public",
        "//pw_bluetooth_sapphire/host/hci",
        "//pw_bluetooth_sapphire/host/transport",
        "@pigweed//pw_string",
        "@pigweed//third_party/fuchsia:fit",
    ],
)

cc_library(
    name = "channel_manager_mock_controller_test_fixture",
    testonly = True,
    # Header is in bt-host:public
    deps = [
        ":l2cap",
        ":testing",
        "//pw_bluetooth_sapphire:public",
        "//pw_bluetooth_sapphire/host/hci",
        "//pw_bluetooth_sapphire/host/testing",
    ],
)

cc_library(
    name = "testing",
    testonly = True,
    srcs = [
        "fake_channel.cc",
        "fake_channel_test.cc",
        "fake_l2cap.cc",
        "fake_signaling_channel.cc",
        "mock_channel_test.cc",
        "test_packets.cc",
    ],
    copts = [
        "-Wno-unused-parameter",
    ],
    deps = [
        ":l2cap",
        "//pw_bluetooth_sapphire:public",
        "//pw_bluetooth_sapphire/host/common",
        "//pw_bluetooth_sapphire/host/hci",
        "//pw_bluetooth_sapphire/host/testing:test_helpers",
        "@pigweed//pw_async:fake_dispatcher_fixture",
        "@pigweed//pw_async:heap_dispatcher",
        "@pigweed//pw_bluetooth",
        "@pigweed//pw_unit_test",
    ],
)

fuchsia_cc_test(
    name = "l2cap_test",
    testonly = True,
    srcs = [
        "a2dp_offload_manager_test.cc",
        "basic_mode_rx_engine_test.cc",
        "basic_mode_tx_engine_test.cc",
        "bredr_command_handler_test.cc",
        "bredr_dynamic_channel_test.cc",
        "bredr_signaling_channel_test.cc",
        "channel_configuration_test.cc",
        "channel_manager_test.cc",
        "channel_test.cc",
        "command_handler_test.cc",
        "credit_based_flow_control_rx_engine_test.cc",
        "credit_based_flow_control_tx_engine_test.cc",
        "dynamic_channel_registry_test.cc",
        "enhanced_retransmission_mode_engines_test.cc",
        "enhanced_retransmission_mode_rx_engine_test.cc",
        "enhanced_retransmission_mode_tx_engine_test.cc",
        "fcs_test.cc",
        "fragmenter_test.cc",
        "frame_headers_test.cc",
        "le_signaling_channel_test.cc",
        "logical_link_test.cc",
        "low_energy_command_handler_test.cc",
        "pdu_test.cc",
        "recombiner_test.cc",
        "scoped_channel_test.cc",
        "signaling_channel_test.cc",
        "types_test.cc",
    ],
    death_unittest = True,
    visibility = ["//visibility:public"],
    deps = [
        ":channel_manager_mock_controller_test_fixture",
        ":l2cap",
        ":testing",
        "//pw_bluetooth_sapphire/host/hci",
        "//pw_bluetooth_sapphire/host/hci:testing",
        "//pw_bluetooth_sapphire/host/testing",
        "//pw_bluetooth_sapphire/host/testing:gtest_main",
        "//pw_bluetooth_sapphire/host/transport:testing",
        "@pigweed//pw_async:fake_dispatcher_fixture",
    ],
)

fuchsia_unittest_package(
    name = "test_pkg",
    package_name = "l2cap_tests",
    testonly = True,
    fuchsia_api_level = "HEAD",
    unit_tests = [
        ":l2cap_test",
    ],
    visibility = ["//visibility:public"],
)
