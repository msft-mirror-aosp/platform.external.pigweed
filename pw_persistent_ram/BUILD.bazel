# Copyright 2021 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

load(
    "//pw_build:pigweed.bzl",
    "pw_cc_test",
)

package(default_visibility = ["//visibility:public"])

licenses(["notice"])

cc_library(
    name = "pw_persistent_ram",
    srcs = ["persistent_buffer.cc"],
    hdrs = [
        "public/pw_persistent_ram/persistent.h",
        "public/pw_persistent_ram/persistent_buffer.h",
    ],
    includes = ["public"],
    deps = [
        "//pw_assert",
        "//pw_bytes",
        "//pw_checksum",
        "//pw_stream",
    ],
)

cc_library(
    name = "flat_file_system_entry",
    hdrs = [
        "public/pw_persistent_ram/flat_file_system_entry.h",
    ],
    includes = ["public"],
    deps = [
        "//pw_file:flat_file_system",
        "//pw_persistent_ram",
    ],
)

pw_cc_test(
    name = "persistent_test",
    srcs = [
        "persistent_test.cc",
    ],
    # The test contains intentional uninitialized memory access.
    tags = ["nomsan"],
    deps = [
        ":pw_persistent_ram",
        "//pw_random",
        "//pw_unit_test",
    ],
)

pw_cc_test(
    name = "persistent_buffer_test",
    srcs = [
        "persistent_buffer_test.cc",
    ],
    # The test contains intentional uninitialized memory access.
    tags = ["nomsan"],
    deps = [
        ":pw_persistent_ram",
        "//pw_random",
        "//pw_unit_test",
    ],
)

pw_cc_test(
    name = "flat_file_system_entry_test",
    srcs = [
        "flat_file_system_entry_test.cc",
    ],
    deps = [
        ":flat_file_system_entry",
    ],
)
