# Copyright 2023 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

# DO NOT MANUALLY EDIT!
# This file was automatically generated by pw_build/gn_writer.py
# It contains GN build targets for fuzztest.

import("//build_overrides/pigweed.gni")

import("$dir_pw_build/error.gni")
import("$dir_pw_build/target_types.gni")
import("$dir_pw_third_party/abseil-cpp/abseil-cpp.gni")
import("$dir_pw_third_party/fuzztest/fuzztest.gni")
import("$dir_pw_third_party/googletest/googletest.gni")
import("$dir_pw_third_party/re2/re2.gni")

# Generated from //fuzztest:absl_helpers
pw_source_set("absl_helpers") {
  public = [
    "$dir_pw_third_party_fuzztest/fuzztest/internal/domains/absl_helpers.h",
  ]
  public_configs = [ "..:fuzztest_public_config1" ]
  configs = [
    "../../abseil-cpp/configs:disabled_warnings",
    "../../re2/configs:disabled_warnings",
    "../configs:internal_disabled_warnings",
  ]
  remove_configs = [
    "$dir_pw_fuzzer:instrumentation",
    "$dir_pw_toolchain/host_clang:sanitize_address",
    "$dir_pw_toolchain/host_clang:sanitize_memory",
    "$dir_pw_toolchain/host_clang:sanitize_thread",
    "$dir_pw_toolchain/host_clang:sanitize_undefined",
    "$dir_pw_toolchain/host_clang:sanitize_undefined_heuristic",
  ]
  public_deps = [
    ":logging",
    "../../abseil-cpp/absl/time",
  ]
}

# Generated from //fuzztest:any
pw_source_set("any") {
  public = [ "$dir_pw_third_party_fuzztest/fuzztest/internal/any.h" ]
  public_configs = [ "..:fuzztest_public_config1" ]
  configs = [
    "../../abseil-cpp/configs:disabled_warnings",
    "../../re2/configs:disabled_warnings",
    "../configs:internal_disabled_warnings",
  ]
  remove_configs = [
    "$dir_pw_fuzzer:instrumentation",
    "$dir_pw_toolchain/host_clang:sanitize_address",
    "$dir_pw_toolchain/host_clang:sanitize_memory",
    "$dir_pw_toolchain/host_clang:sanitize_thread",
    "$dir_pw_toolchain/host_clang:sanitize_undefined",
    "$dir_pw_toolchain/host_clang:sanitize_undefined_heuristic",
  ]
  public_deps = [
    ":logging",
    ":meta",
  ]
}

# Generated from //fuzztest:compatibility_mode
pw_source_set("compatibility_mode") {
  public =
      [ "$dir_pw_third_party_fuzztest/fuzztest/internal/compatibility_mode.h" ]
  sources =
      [ "$dir_pw_third_party_fuzztest/fuzztest/internal/compatibility_mode.cc" ]
  public_configs = [ "..:fuzztest_public_config1" ]
  configs = [
    "../../abseil-cpp/configs:disabled_warnings",
    "../../re2/configs:disabled_warnings",
    "../configs:internal_disabled_warnings",
  ]
  remove_configs = [
    "$dir_pw_fuzzer:instrumentation",
    "$dir_pw_toolchain/host_clang:sanitize_address",
    "$dir_pw_toolchain/host_clang:sanitize_memory",
    "$dir_pw_toolchain/host_clang:sanitize_thread",
    "$dir_pw_toolchain/host_clang:sanitize_undefined",
    "$dir_pw_toolchain/host_clang:sanitize_undefined_heuristic",
  ]
  public_deps = [
    ":fixture_driver",
    ":logging",
    ":runtime",
    "../../abseil-cpp/absl/random:distributions",
    "../../abseil-cpp/absl/strings",
    "../../abseil-cpp/absl/strings:str_format",
    "../../abseil-cpp/absl/time",
  ]
}

# Generated from //fuzztest:coverage
pw_source_set("coverage") {
  public = [ "$dir_pw_third_party_fuzztest/fuzztest/internal/coverage.h" ]
  sources = [ "$dir_pw_third_party_fuzztest/fuzztest/internal/coverage.cc" ]
  public_configs = [ "..:fuzztest_public_config1" ]
  configs = [
    "../../abseil-cpp/configs:disabled_warnings",
    "../../re2/configs:disabled_warnings",
    "../configs:internal_disabled_warnings",
  ]
  remove_configs = [
    "$dir_pw_fuzzer:instrumentation",
    "$dir_pw_toolchain/host_clang:sanitize_address",
    "$dir_pw_toolchain/host_clang:sanitize_memory",
    "$dir_pw_toolchain/host_clang:sanitize_thread",
    "$dir_pw_toolchain/host_clang:sanitize_undefined",
    "$dir_pw_toolchain/host_clang:sanitize_undefined_heuristic",
  ]
  public_deps = [
    ":logging",
    ":table_of_recent_compares",
    "../../abseil-cpp/absl/base:core_headers",
    "../../abseil-cpp/absl/strings:str_format",
    "../../abseil-cpp/absl/types:span",
  ]
}

# Generated from //fuzztest:domain
pw_source_set("domain") {
  public = [
    "$dir_pw_third_party_fuzztest/fuzztest/domain.h",
    "$dir_pw_third_party_fuzztest/fuzztest/internal/domains/aggregate_of_impl.h",
    "$dir_pw_third_party_fuzztest/fuzztest/internal/domains/arbitrary_impl.h",
    "$dir_pw_third_party_fuzztest/fuzztest/internal/domains/bit_flag_combination_of_impl.h",
    "$dir_pw_third_party_fuzztest/fuzztest/internal/domains/container_mutation_helpers.h",
    "$dir_pw_third_party_fuzztest/fuzztest/internal/domains/container_of_impl.h",
    "$dir_pw_third_party_fuzztest/fuzztest/internal/domains/domain_base.h",
    "$dir_pw_third_party_fuzztest/fuzztest/internal/domains/element_of_impl.h",
    "$dir_pw_third_party_fuzztest/fuzztest/internal/domains/filter_impl.h",
    "$dir_pw_third_party_fuzztest/fuzztest/internal/domains/flat_map_impl.h",
    "$dir_pw_third_party_fuzztest/fuzztest/internal/domains/in_grammar_impl.h",
    "$dir_pw_third_party_fuzztest/fuzztest/internal/domains/in_range_impl.h",
    "$dir_pw_third_party_fuzztest/fuzztest/internal/domains/in_regexp_impl.h",
    "$dir_pw_third_party_fuzztest/fuzztest/internal/domains/map_impl.h",
    "$dir_pw_third_party_fuzztest/fuzztest/internal/domains/one_of_impl.h",
    "$dir_pw_third_party_fuzztest/fuzztest/internal/domains/optional_of_impl.h",
    "$dir_pw_third_party_fuzztest/fuzztest/internal/domains/protobuf_domain_impl.h",
    "$dir_pw_third_party_fuzztest/fuzztest/internal/domains/serialization_helpers.h",
    "$dir_pw_third_party_fuzztest/fuzztest/internal/domains/smart_pointer_of_impl.h",
    "$dir_pw_third_party_fuzztest/fuzztest/internal/domains/unique_elements_container_of_impl.h",
    "$dir_pw_third_party_fuzztest/fuzztest/internal/domains/value_mutation_helpers.h",
    "$dir_pw_third_party_fuzztest/fuzztest/internal/domains/variant_of_impl.h",
  ]
  sources = [
    "$dir_pw_third_party_fuzztest/fuzztest/internal/domains/in_grammar_impl.cc",
  ]
  public_configs = [ "..:fuzztest_public_config1" ]
  configs = [
    "../../abseil-cpp/configs:disabled_warnings",
    "../../re2/configs:disabled_warnings",
    "../configs:internal_disabled_warnings",
  ]
  remove_configs = [
    "$dir_pw_fuzzer:instrumentation",
    "$dir_pw_toolchain/host_clang:sanitize_address",
    "$dir_pw_toolchain/host_clang:sanitize_memory",
    "$dir_pw_toolchain/host_clang:sanitize_thread",
    "$dir_pw_toolchain/host_clang:sanitize_undefined",
    "$dir_pw_toolchain/host_clang:sanitize_undefined_heuristic",
  ]
  public_deps = [
    ":absl_helpers",
    ":any",
    ":coverage",
    ":logging",
    ":meta",
    ":regexp_dfa",
    ":serialization",
    ":table_of_recent_compares",
    ":type_support",
    "../../abseil-cpp/absl/base:core_headers",
    "../../abseil-cpp/absl/container:flat_hash_map",
    "../../abseil-cpp/absl/container:flat_hash_set",
    "../../abseil-cpp/absl/numeric:bits",
    "../../abseil-cpp/absl/numeric:int128",
    "../../abseil-cpp/absl/random",
    "../../abseil-cpp/absl/random:bit_gen_ref",
    "../../abseil-cpp/absl/random:distributions",
    "../../abseil-cpp/absl/strings",
    "../../abseil-cpp/absl/strings:str_format",
    "../../abseil-cpp/absl/synchronization",
    "../../abseil-cpp/absl/time",
    "../../abseil-cpp/absl/types:span",
  ]
}

# Generated from //fuzztest:fixture_driver
pw_source_set("fixture_driver") {
  public = [ "$dir_pw_third_party_fuzztest/fuzztest/internal/fixture_driver.h" ]
  sources =
      [ "$dir_pw_third_party_fuzztest/fuzztest/internal/fixture_driver.cc" ]
  public_configs = [ "..:fuzztest_public_config1" ]
  configs = [
    "../../abseil-cpp/configs:disabled_warnings",
    "../../re2/configs:disabled_warnings",
    "../configs:internal_disabled_warnings",
  ]
  remove_configs = [
    "$dir_pw_fuzzer:instrumentation",
    "$dir_pw_toolchain/host_clang:sanitize_address",
    "$dir_pw_toolchain/host_clang:sanitize_memory",
    "$dir_pw_toolchain/host_clang:sanitize_thread",
    "$dir_pw_toolchain/host_clang:sanitize_undefined",
    "$dir_pw_toolchain/host_clang:sanitize_undefined_heuristic",
  ]
  public_deps = [
    ":any",
    ":domain",
    ":logging",
    ":registration",
    ":type_support",
    "../../abseil-cpp/absl/memory",
    "../../abseil-cpp/absl/strings:str_format",
    "../../abseil-cpp/absl/types:span",
  ]
}

# Generated from //fuzztest:fuzztest
pw_source_set("fuzztest") {
  public = [ "$dir_pw_third_party_fuzztest/fuzztest/fuzztest.h" ]
  sources = [ "$dir_pw_third_party_fuzztest/fuzztest/fuzztest.cc" ]
  public_configs = [ "..:fuzztest_public_config1" ]
  configs = [
    "../../abseil-cpp/configs:disabled_warnings",
    "../../re2/configs:disabled_warnings",
    "../configs:internal_disabled_warnings",
  ]
  remove_configs = [
    "$dir_pw_fuzzer:instrumentation",
    "$dir_pw_toolchain/host_clang:sanitize_address",
    "$dir_pw_toolchain/host_clang:sanitize_memory",
    "$dir_pw_toolchain/host_clang:sanitize_thread",
    "$dir_pw_toolchain/host_clang:sanitize_undefined",
    "$dir_pw_toolchain/host_clang:sanitize_undefined_heuristic",
  ]
  public_deps = [
    ":domain",
    ":io",
    ":registry",
    ":runtime",
    "../../abseil-cpp/absl/strings",
    "../../abseil-cpp/absl/strings:str_format",
  ]
}

# Generated from //fuzztest:fuzztest_gtest_main
pw_source_set("fuzztest_gtest_main") {
  sources = [ "$dir_pw_third_party_fuzztest/fuzztest/fuzztest_gtest_main.cc" ]
  public_configs = [ "..:fuzztest_public_config1" ]
  configs = [
    "../../abseil-cpp/configs:disabled_warnings",
    "../../re2/configs:disabled_warnings",
    "../configs:internal_disabled_warnings",
  ]
  remove_configs = [
    "$dir_pw_fuzzer:instrumentation",
    "$dir_pw_toolchain/host_clang:sanitize_address",
    "$dir_pw_toolchain/host_clang:sanitize_memory",
    "$dir_pw_toolchain/host_clang:sanitize_thread",
    "$dir_pw_toolchain/host_clang:sanitize_undefined",
    "$dir_pw_toolchain/host_clang:sanitize_undefined_heuristic",
  ]
  public_deps = [
    ":fuzztest",
    ":googletest_adaptor",
    ":runtime",
    "../../abseil-cpp/absl/flags:flag",
    "../../abseil-cpp/absl/flags:parse",
    "../../abseil-cpp/absl/time",
    "../../googletest",
  ]
}

# Generated from //fuzztest:googletest_adaptor
pw_source_set("googletest_adaptor") {
  public = [ "$dir_pw_third_party_fuzztest/fuzztest/googletest_adaptor.h" ]
  public_configs = [ "..:fuzztest_public_config1" ]
  configs = [
    "../../abseil-cpp/configs:disabled_warnings",
    "../../re2/configs:disabled_warnings",
    "../configs:internal_disabled_warnings",
  ]
  remove_configs = [
    "$dir_pw_fuzzer:instrumentation",
    "$dir_pw_toolchain/host_clang:sanitize_address",
    "$dir_pw_toolchain/host_clang:sanitize_memory",
    "$dir_pw_toolchain/host_clang:sanitize_thread",
    "$dir_pw_toolchain/host_clang:sanitize_undefined",
    "$dir_pw_toolchain/host_clang:sanitize_undefined_heuristic",
  ]
  public_deps = [
    ":registry",
    ":runtime",
    "../../googletest",
  ]
}

# Generated from //fuzztest:googletest_fixture_adapter
pw_source_set("googletest_fixture_adapter") {
  public =
      [ "$dir_pw_third_party_fuzztest/fuzztest/googletest_fixture_adapter.h" ]
  public_configs = [ "..:fuzztest_public_config1" ]
  configs = [
    "../../abseil-cpp/configs:disabled_warnings",
    "../../re2/configs:disabled_warnings",
    "../configs:internal_disabled_warnings",
  ]
  remove_configs = [
    "$dir_pw_fuzzer:instrumentation",
    "$dir_pw_toolchain/host_clang:sanitize_address",
    "$dir_pw_toolchain/host_clang:sanitize_memory",
    "$dir_pw_toolchain/host_clang:sanitize_thread",
    "$dir_pw_toolchain/host_clang:sanitize_undefined",
    "$dir_pw_toolchain/host_clang:sanitize_undefined_heuristic",
  ]
  public_deps = [
    ":fixture_driver",
    "../../googletest",
  ]
}

# Generated from //fuzztest:io
pw_source_set("io") {
  public = [ "$dir_pw_third_party_fuzztest/fuzztest/internal/io.h" ]
  sources = [ "$dir_pw_third_party_fuzztest/fuzztest/internal/io.cc" ]
  public_configs = [ "..:fuzztest_public_config1" ]
  configs = [
    "../../abseil-cpp/configs:disabled_warnings",
    "../../re2/configs:disabled_warnings",
    "../configs:internal_disabled_warnings",
  ]
  remove_configs = [
    "$dir_pw_fuzzer:instrumentation",
    "$dir_pw_toolchain/host_clang:sanitize_address",
    "$dir_pw_toolchain/host_clang:sanitize_memory",
    "$dir_pw_toolchain/host_clang:sanitize_thread",
    "$dir_pw_toolchain/host_clang:sanitize_undefined",
    "$dir_pw_toolchain/host_clang:sanitize_undefined_heuristic",
  ]
  public_deps = [
    ":logging",
    "../../abseil-cpp/absl/hash",
    "../../abseil-cpp/absl/strings:str_format",
  ]
}

# Generated from //fuzztest:logging
pw_source_set("logging") {
  public = [ "$dir_pw_third_party_fuzztest/fuzztest/internal/logging.h" ]
  sources = [ "$dir_pw_third_party_fuzztest/fuzztest/internal/logging.cc" ]
  public_configs = [ "..:fuzztest_public_config1" ]
  configs = [
    "../../abseil-cpp/configs:disabled_warnings",
    "../../re2/configs:disabled_warnings",
    "../configs:internal_disabled_warnings",
  ]
  remove_configs = [
    "$dir_pw_fuzzer:instrumentation",
    "$dir_pw_toolchain/host_clang:sanitize_address",
    "$dir_pw_toolchain/host_clang:sanitize_memory",
    "$dir_pw_toolchain/host_clang:sanitize_thread",
    "$dir_pw_toolchain/host_clang:sanitize_undefined",
    "$dir_pw_toolchain/host_clang:sanitize_undefined_heuristic",
  ]
  public_deps = [ "../../abseil-cpp/absl/strings" ]
}

# Generated from //fuzztest:meta
pw_source_set("meta") {
  public = [ "$dir_pw_third_party_fuzztest/fuzztest/internal/meta.h" ]
  public_configs = [ "..:fuzztest_public_config1" ]
  configs = [
    "../../abseil-cpp/configs:disabled_warnings",
    "../../re2/configs:disabled_warnings",
    "../configs:internal_disabled_warnings",
  ]
  remove_configs = [
    "$dir_pw_fuzzer:instrumentation",
    "$dir_pw_toolchain/host_clang:sanitize_address",
    "$dir_pw_toolchain/host_clang:sanitize_memory",
    "$dir_pw_toolchain/host_clang:sanitize_thread",
    "$dir_pw_toolchain/host_clang:sanitize_undefined",
    "$dir_pw_toolchain/host_clang:sanitize_undefined_heuristic",
  ]
  public_deps = [ "../../abseil-cpp/absl/numeric:int128" ]
}

# Generated from //fuzztest:regexp_dfa
pw_source_set("regexp_dfa") {
  public =
      [ "$dir_pw_third_party_fuzztest/fuzztest/internal/domains/regexp_dfa.h" ]
  sources =
      [ "$dir_pw_third_party_fuzztest/fuzztest/internal/domains/regexp_dfa.cc" ]
  public_configs = [ "..:fuzztest_public_config1" ]
  configs = [
    "../../abseil-cpp/configs:disabled_warnings",
    "../../re2/configs:disabled_warnings",
    "../configs:internal_disabled_warnings",
  ]
  remove_configs = [
    "$dir_pw_fuzzer:instrumentation",
    "$dir_pw_toolchain/host_clang:sanitize_address",
    "$dir_pw_toolchain/host_clang:sanitize_memory",
    "$dir_pw_toolchain/host_clang:sanitize_thread",
    "$dir_pw_toolchain/host_clang:sanitize_undefined",
    "$dir_pw_toolchain/host_clang:sanitize_undefined_heuristic",
  ]
  public_deps = [
    ":logging",
    "../../abseil-cpp/absl/container:flat_hash_map",
    "../../abseil-cpp/absl/random:bit_gen_ref",
    "../../abseil-cpp/absl/random:distributions",
    "../../re2",
  ]
}

# Generated from //fuzztest:registration
pw_source_set("registration") {
  public = [ "$dir_pw_third_party_fuzztest/fuzztest/internal/registration.h" ]
  public_configs = [ "..:fuzztest_public_config1" ]
  configs = [
    "../../abseil-cpp/configs:disabled_warnings",
    "../../re2/configs:disabled_warnings",
    "../configs:internal_disabled_warnings",
  ]
  remove_configs = [
    "$dir_pw_fuzzer:instrumentation",
    "$dir_pw_toolchain/host_clang:sanitize_address",
    "$dir_pw_toolchain/host_clang:sanitize_memory",
    "$dir_pw_toolchain/host_clang:sanitize_thread",
    "$dir_pw_toolchain/host_clang:sanitize_undefined",
    "$dir_pw_toolchain/host_clang:sanitize_undefined_heuristic",
  ]
  public_deps = [
    ":domain",
    ":meta",
    ":type_support",
    "../../abseil-cpp/absl/functional:any_invocable",
    "../../abseil-cpp/absl/strings:str_format",
    "../../abseil-cpp/absl/types:span",
  ]
}

# Generated from //fuzztest:registry
pw_source_set("registry") {
  public = [ "$dir_pw_third_party_fuzztest/fuzztest/internal/registry.h" ]
  sources = [ "$dir_pw_third_party_fuzztest/fuzztest/internal/registry.cc" ]
  public_configs = [ "..:fuzztest_public_config1" ]
  configs = [
    "../../abseil-cpp/configs:disabled_warnings",
    "../../re2/configs:disabled_warnings",
    "../configs:internal_disabled_warnings",
  ]
  remove_configs = [
    "$dir_pw_fuzzer:instrumentation",
    "$dir_pw_toolchain/host_clang:sanitize_address",
    "$dir_pw_toolchain/host_clang:sanitize_memory",
    "$dir_pw_toolchain/host_clang:sanitize_thread",
    "$dir_pw_toolchain/host_clang:sanitize_undefined",
    "$dir_pw_toolchain/host_clang:sanitize_undefined_heuristic",
  ]
  public_deps = [
    ":compatibility_mode",
    ":fixture_driver",
    ":registration",
    ":runtime",
    "../../abseil-cpp/absl/container:flat_hash_map",
    "../../abseil-cpp/absl/functional:function_ref",
  ]
}

# Generated from //fuzztest:runtime
pw_source_set("runtime") {
  public = [ "$dir_pw_third_party_fuzztest/fuzztest/internal/runtime.h" ]
  sources = [ "$dir_pw_third_party_fuzztest/fuzztest/internal/runtime.cc" ]
  public_configs = [ "..:fuzztest_public_config1" ]
  configs = [
    "../../abseil-cpp/configs:disabled_warnings",
    "../../re2/configs:disabled_warnings",
    "../configs:internal_disabled_warnings",
  ]
  remove_configs = [
    "$dir_pw_fuzzer:instrumentation",
    "$dir_pw_toolchain/host_clang:sanitize_address",
    "$dir_pw_toolchain/host_clang:sanitize_memory",
    "$dir_pw_toolchain/host_clang:sanitize_thread",
    "$dir_pw_toolchain/host_clang:sanitize_undefined",
    "$dir_pw_toolchain/host_clang:sanitize_undefined_heuristic",
  ]
  public_deps = [
    ":coverage",
    ":domain",
    ":fixture_driver",
    ":io",
    ":logging",
    ":meta",
    ":registration",
    ":seed_seq",
    ":serialization",
    ":type_support",
    "../../abseil-cpp/absl/functional:any_invocable",
    "../../abseil-cpp/absl/functional:function_ref",
    "../../abseil-cpp/absl/random",
    "../../abseil-cpp/absl/random:bit_gen_ref",
    "../../abseil-cpp/absl/random:distributions",
    "../../abseil-cpp/absl/strings",
    "../../abseil-cpp/absl/strings:str_format",
    "../../abseil-cpp/absl/time",
    "../../abseil-cpp/absl/types:span",
  ]
}

# Generated from //fuzztest:seed_seq
pw_source_set("seed_seq") {
  public = [ "$dir_pw_third_party_fuzztest/fuzztest/internal/seed_seq.h" ]
  sources = [ "$dir_pw_third_party_fuzztest/fuzztest/internal/seed_seq.cc" ]
  public_configs = [ "..:fuzztest_public_config1" ]
  configs = [
    "../../abseil-cpp/configs:disabled_warnings",
    "../../re2/configs:disabled_warnings",
    "../configs:internal_disabled_warnings",
  ]
  remove_configs = [
    "$dir_pw_fuzzer:instrumentation",
    "$dir_pw_toolchain/host_clang:sanitize_address",
    "$dir_pw_toolchain/host_clang:sanitize_memory",
    "$dir_pw_toolchain/host_clang:sanitize_thread",
    "$dir_pw_toolchain/host_clang:sanitize_undefined",
    "$dir_pw_toolchain/host_clang:sanitize_undefined_heuristic",
  ]
  public_deps = [
    ":logging",
    "../../abseil-cpp/absl/random",
    "../../abseil-cpp/absl/strings",
    "../../abseil-cpp/absl/types:span",
  ]
}

# Generated from //fuzztest:serialization
pw_source_set("serialization") {
  public = [ "$dir_pw_third_party_fuzztest/fuzztest/internal/serialization.h" ]
  sources =
      [ "$dir_pw_third_party_fuzztest/fuzztest/internal/serialization.cc" ]
  public_configs = [ "..:fuzztest_public_config1" ]
  configs = [
    "../../abseil-cpp/configs:disabled_warnings",
    "../../re2/configs:disabled_warnings",
    "../configs:internal_disabled_warnings",
  ]
  remove_configs = [
    "$dir_pw_fuzzer:instrumentation",
    "$dir_pw_toolchain/host_clang:sanitize_address",
    "$dir_pw_toolchain/host_clang:sanitize_memory",
    "$dir_pw_toolchain/host_clang:sanitize_thread",
    "$dir_pw_toolchain/host_clang:sanitize_undefined",
    "$dir_pw_toolchain/host_clang:sanitize_undefined_heuristic",
  ]
  public_deps = [
    ":meta",
    "../../abseil-cpp/absl/numeric:int128",
    "../../abseil-cpp/absl/strings",
    "../../abseil-cpp/absl/strings:str_format",
    "../../abseil-cpp/absl/types:span",
  ]
}

# Generated from //fuzztest:subprocess
pw_source_set("subprocess") {
  public = [ "$dir_pw_third_party_fuzztest/fuzztest/internal/subprocess.h" ]
  sources = [ "$dir_pw_third_party_fuzztest/fuzztest/internal/subprocess.cc" ]
  public_configs = [ "..:fuzztest_public_config1" ]
  configs = [
    "../../abseil-cpp/configs:disabled_warnings",
    "../../re2/configs:disabled_warnings",
    "../configs:internal_disabled_warnings",
  ]
  remove_configs = [
    "$dir_pw_fuzzer:instrumentation",
    "$dir_pw_toolchain/host_clang:sanitize_address",
    "$dir_pw_toolchain/host_clang:sanitize_memory",
    "$dir_pw_toolchain/host_clang:sanitize_thread",
    "$dir_pw_toolchain/host_clang:sanitize_undefined",
    "$dir_pw_toolchain/host_clang:sanitize_undefined_heuristic",
  ]
  public_deps = [
    ":logging",
    "../../abseil-cpp/absl/container:flat_hash_map",
    "../../abseil-cpp/absl/strings",
    "../../abseil-cpp/absl/time",
  ]
}

# Generated from //fuzztest:table_of_recent_compares
pw_source_set("table_of_recent_compares") {
  public = [
    "$dir_pw_third_party_fuzztest/fuzztest/internal/table_of_recent_compares.h",
  ]
  public_configs = [ "..:fuzztest_public_config1" ]
  configs = [
    "../../abseil-cpp/configs:disabled_warnings",
    "../../re2/configs:disabled_warnings",
    "../configs:internal_disabled_warnings",
  ]
  remove_configs = [
    "$dir_pw_fuzzer:instrumentation",
    "$dir_pw_toolchain/host_clang:sanitize_address",
    "$dir_pw_toolchain/host_clang:sanitize_memory",
    "$dir_pw_toolchain/host_clang:sanitize_thread",
    "$dir_pw_toolchain/host_clang:sanitize_undefined",
    "$dir_pw_toolchain/host_clang:sanitize_undefined_heuristic",
  ]
  public_deps = [
    ":type_support",
    "../../abseil-cpp/absl/container:flat_hash_set",
    "../../abseil-cpp/absl/random:bit_gen_ref",
    "../../abseil-cpp/absl/random:distributions",
  ]
}

# Generated from //fuzztest:type_support
pw_source_set("type_support") {
  public = [ "$dir_pw_third_party_fuzztest/fuzztest/internal/type_support.h" ]
  sources = [ "$dir_pw_third_party_fuzztest/fuzztest/internal/type_support.cc" ]
  public_configs = [ "..:fuzztest_public_config1" ]
  configs = [
    "../../abseil-cpp/configs:disabled_warnings",
    "../../re2/configs:disabled_warnings",
    "../configs:internal_disabled_warnings",
  ]
  remove_configs = [
    "$dir_pw_fuzzer:instrumentation",
    "$dir_pw_toolchain/host_clang:sanitize_address",
    "$dir_pw_toolchain/host_clang:sanitize_memory",
    "$dir_pw_toolchain/host_clang:sanitize_thread",
    "$dir_pw_toolchain/host_clang:sanitize_undefined",
    "$dir_pw_toolchain/host_clang:sanitize_undefined_heuristic",
  ]
  public_deps = [
    ":absl_helpers",
    ":meta",
    "../../abseil-cpp/absl/debugging:symbolize",
    "../../abseil-cpp/absl/strings",
    "../../abseil-cpp/absl/strings:str_format",
    "../../abseil-cpp/absl/time",
  ]
}
