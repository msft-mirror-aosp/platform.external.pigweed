# Copyright 2023 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

# DO NOT MANUALLY EDIT!
# This file was automatically generated by pw_build/gn_writer.py
# It contains GN build targets for absl/container.

import("//build_overrides/pigweed.gni")

import("$dir_pw_build/target_types.gni")
import("$dir_pw_third_party/abseil-cpp/abseil-cpp.gni")

# Generated from //absl/container:btree
pw_source_set("btree") {
  public = [
    "$dir_pw_third_party_abseil_cpp/absl/container/btree_map.h",
    "$dir_pw_third_party_abseil_cpp/absl/container/btree_set.h",
  ]
  sources = [
    "$dir_pw_third_party_abseil_cpp/absl/container/internal/btree.h",
    "$dir_pw_third_party_abseil_cpp/absl/container/internal/btree_container.h",
  ]
  public_configs = [ "../..:abseil_cpp_public_config1" ]
  configs = [
    "../../configs:internal_disabled_warnings",
    "../..:abseil_cpp_config1",
  ]
  remove_configs = [ "$dir_pw_fuzzer:instrumentation" ]
  public_deps = [
    ":common",
    ":common_policy_traits",
    ":compressed_tuple",
    ":container_memory",
    ":layout",
    "../base:core_headers",
    "../base:raw_logging_internal",
    "../base:throw_delegate",
    "../memory",
    "../meta:type_traits",
    "../strings",
    "../strings:cord",
    "../types:compare",
    "../utility",
  ]
}

# Generated from //absl/container:common
pw_source_set("common") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/container/internal/common.h" ]
  public_configs = [ "../..:abseil_cpp_public_config1" ]
  configs = [
    "../../configs:internal_disabled_warnings",
    "../..:abseil_cpp_config1",
  ]
  remove_configs = [ "$dir_pw_fuzzer:instrumentation" ]
  public_deps = [
    "../meta:type_traits",
    "../types:optional",
  ]
}

# Generated from //absl/container:common_policy_traits
pw_source_set("common_policy_traits") {
  visibility = [ ":*" ]
  public = [ "$dir_pw_third_party_abseil_cpp/absl/container/internal/common_policy_traits.h" ]
  public_configs = [ "../..:abseil_cpp_public_config1" ]
  configs = [
    "../../configs:internal_disabled_warnings",
    "../..:abseil_cpp_config1",
  ]
  remove_configs = [ "$dir_pw_fuzzer:instrumentation" ]
  public_deps = [ "../meta:type_traits" ]
}

# Generated from //absl/container:compressed_tuple
pw_source_set("compressed_tuple") {
  public = [
    "$dir_pw_third_party_abseil_cpp/absl/container/internal/compressed_tuple.h",
  ]
  public_configs = [ "../..:abseil_cpp_public_config1" ]
  configs = [
    "../../configs:internal_disabled_warnings",
    "../..:abseil_cpp_config1",
  ]
  remove_configs = [ "$dir_pw_fuzzer:instrumentation" ]
  public_deps = [ "../utility" ]
}

# Generated from //absl/container:container_memory
pw_source_set("container_memory") {
  public = [
    "$dir_pw_third_party_abseil_cpp/absl/container/internal/container_memory.h",
  ]
  public_configs = [ "../..:abseil_cpp_public_config1" ]
  configs = [
    "../../configs:internal_disabled_warnings",
    "../..:abseil_cpp_config1",
  ]
  remove_configs = [ "$dir_pw_fuzzer:instrumentation" ]
  public_deps = [
    "../base:config",
    "../memory",
    "../meta:type_traits",
    "../utility",
  ]
}

# Generated from //absl/container:fixed_array
pw_source_set("fixed_array") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/container/fixed_array.h" ]
  public_configs = [ "../..:abseil_cpp_public_config1" ]
  configs = [
    "../../configs:internal_disabled_warnings",
    "../..:abseil_cpp_config1",
  ]
  remove_configs = [ "$dir_pw_fuzzer:instrumentation" ]
  public_deps = [
    ":compressed_tuple",
    "../algorithm",
    "../base:config",
    "../base:core_headers",
    "../base:dynamic_annotations",
    "../base:throw_delegate",
    "../memory",
  ]
}

# Generated from //absl/container:flat_hash_map
pw_source_set("flat_hash_map") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/container/flat_hash_map.h" ]
  public_configs = [ "../..:abseil_cpp_public_config1" ]
  configs = [
    "../../configs:internal_disabled_warnings",
    "../..:abseil_cpp_config1",
  ]
  remove_configs = [ "$dir_pw_fuzzer:instrumentation" ]
  public_deps = [
    ":container_memory",
    ":hash_function_defaults",
    ":raw_hash_map",
    "../algorithm:container",
    "../base:core_headers",
    "../memory",
  ]
}

# Generated from //absl/container:flat_hash_set
pw_source_set("flat_hash_set") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/container/flat_hash_set.h" ]
  public_configs = [ "../..:abseil_cpp_public_config1" ]
  configs = [
    "../../configs:internal_disabled_warnings",
    "../..:abseil_cpp_config1",
  ]
  remove_configs = [ "$dir_pw_fuzzer:instrumentation" ]
  public_deps = [
    ":container_memory",
    ":hash_function_defaults",
    ":raw_hash_set",
    "../algorithm:container",
    "../base:core_headers",
    "../memory",
  ]
}

# Generated from //absl/container:hash_function_defaults
pw_source_set("hash_function_defaults") {
  visibility = [ ":*" ]
  public = [ "$dir_pw_third_party_abseil_cpp/absl/container/internal/hash_function_defaults.h" ]
  public_configs = [ "../..:abseil_cpp_public_config1" ]
  configs = [
    "../../configs:internal_disabled_warnings",
    "../..:abseil_cpp_config1",
  ]
  remove_configs = [ "$dir_pw_fuzzer:instrumentation" ]
  public_deps = [
    "../base:config",
    "../hash",
    "../strings",
    "../strings:cord",
  ]
}

# Generated from //absl/container:hash_policy_traits
pw_source_set("hash_policy_traits") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/container/internal/hash_policy_traits.h" ]
  public_configs = [ "../..:abseil_cpp_public_config1" ]
  configs = [
    "../../configs:internal_disabled_warnings",
    "../..:abseil_cpp_config1",
  ]
  remove_configs = [ "$dir_pw_fuzzer:instrumentation" ]
  public_deps = [
    ":common_policy_traits",
    "../meta:type_traits",
  ]
}

# Generated from //absl/container:hashtable_debug
pw_source_set("hashtable_debug") {
  public = [
    "$dir_pw_third_party_abseil_cpp/absl/container/internal/hashtable_debug.h",
  ]
  public_configs = [ "../..:abseil_cpp_public_config1" ]
  configs = [
    "../../configs:internal_disabled_warnings",
    "../..:abseil_cpp_config1",
  ]
  remove_configs = [ "$dir_pw_fuzzer:instrumentation" ]
  public_deps = [ ":hashtable_debug_hooks" ]
}

# Generated from //absl/container:hashtable_debug_hooks
pw_source_set("hashtable_debug_hooks") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/container/internal/hashtable_debug_hooks.h" ]
  public_configs = [ "../..:abseil_cpp_public_config1" ]
  configs = [
    "../../configs:internal_disabled_warnings",
    "../..:abseil_cpp_config1",
  ]
  remove_configs = [ "$dir_pw_fuzzer:instrumentation" ]
  public_deps = [ "../base:config" ]
}

# Generated from //absl/container:hashtablez_sampler
pw_source_set("hashtablez_sampler") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/container/internal/hashtablez_sampler.h" ]
  sources = [
    "$dir_pw_third_party_abseil_cpp/absl/container/internal/hashtablez_sampler.cc",
    "$dir_pw_third_party_abseil_cpp/absl/container/internal/hashtablez_sampler_force_weak_definition.cc",
  ]
  public_configs = [ "../..:abseil_cpp_public_config1" ]
  configs = [
    "../../configs:internal_disabled_warnings",
    "../..:abseil_cpp_config1",
  ]
  remove_configs = [ "$dir_pw_fuzzer:instrumentation" ]
  public_deps = [
    "../base",
    "../base:config",
    "../base:core_headers",
    "../base:raw_logging_internal",
    "../debugging:stacktrace",
    "../memory",
    "../profiling:exponential_biased",
    "../profiling:sample_recorder",
    "../synchronization",
    "../time",
    "../utility",
  ]
}

# Generated from //absl/container:inlined_vector
pw_source_set("inlined_vector") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/container/inlined_vector.h" ]
  public_configs = [ "../..:abseil_cpp_public_config1" ]
  configs = [
    "../../configs:internal_disabled_warnings",
    "../..:abseil_cpp_config1",
  ]
  remove_configs = [ "$dir_pw_fuzzer:instrumentation" ]
  public_deps = [
    ":inlined_vector_internal",
    "../algorithm",
    "../base:core_headers",
    "../base:throw_delegate",
    "../memory",
    "../meta:type_traits",
  ]
}

# Generated from //absl/container:inlined_vector_internal
pw_source_set("inlined_vector_internal") {
  public = [
    "$dir_pw_third_party_abseil_cpp/absl/container/internal/inlined_vector.h",
  ]
  public_configs = [ "../..:abseil_cpp_public_config1" ]
  configs = [
    "../../configs:internal_disabled_warnings",
    "../..:abseil_cpp_config1",
  ]
  remove_configs = [ "$dir_pw_fuzzer:instrumentation" ]
  public_deps = [
    ":compressed_tuple",
    "../base:core_headers",
    "../memory",
    "../meta:type_traits",
    "../types:span",
  ]
}

# Generated from //absl/container:layout
pw_source_set("layout") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/container/internal/layout.h" ]
  public_configs = [ "../..:abseil_cpp_public_config1" ]
  configs = [
    "../../configs:internal_disabled_warnings",
    "../..:abseil_cpp_config1",
  ]
  remove_configs = [ "$dir_pw_fuzzer:instrumentation" ]
  public_deps = [
    "../base:config",
    "../base:core_headers",
    "../meta:type_traits",
    "../strings",
    "../types:span",
    "../utility",
  ]
}

# Generated from //absl/container:node_hash_map
pw_source_set("node_hash_map") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/container/node_hash_map.h" ]
  public_configs = [ "../..:abseil_cpp_public_config1" ]
  configs = [
    "../../configs:internal_disabled_warnings",
    "../..:abseil_cpp_config1",
  ]
  remove_configs = [ "$dir_pw_fuzzer:instrumentation" ]
  public_deps = [
    ":container_memory",
    ":hash_function_defaults",
    ":node_slot_policy",
    ":raw_hash_map",
    "../algorithm:container",
    "../base:core_headers",
    "../memory",
  ]
}

# Generated from //absl/container:node_hash_set
pw_source_set("node_hash_set") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/container/node_hash_set.h" ]
  public_configs = [ "../..:abseil_cpp_public_config1" ]
  configs = [
    "../../configs:internal_disabled_warnings",
    "../..:abseil_cpp_config1",
  ]
  remove_configs = [ "$dir_pw_fuzzer:instrumentation" ]
  public_deps = [
    ":hash_function_defaults",
    ":node_slot_policy",
    ":raw_hash_set",
    "../algorithm:container",
    "../base:core_headers",
    "../memory",
  ]
}

# Generated from //absl/container:node_slot_policy
pw_source_set("node_slot_policy") {
  public = [
    "$dir_pw_third_party_abseil_cpp/absl/container/internal/node_slot_policy.h",
  ]
  public_configs = [ "../..:abseil_cpp_public_config1" ]
  configs = [
    "../../configs:internal_disabled_warnings",
    "../..:abseil_cpp_config1",
  ]
  remove_configs = [ "$dir_pw_fuzzer:instrumentation" ]
  public_deps = [ "../base:config" ]
}

# Generated from //absl/container:raw_hash_map
pw_source_set("raw_hash_map") {
  public = [
    "$dir_pw_third_party_abseil_cpp/absl/container/internal/raw_hash_map.h",
  ]
  public_configs = [ "../..:abseil_cpp_public_config1" ]
  configs = [
    "../../configs:internal_disabled_warnings",
    "../..:abseil_cpp_config1",
  ]
  remove_configs = [ "$dir_pw_fuzzer:instrumentation" ]
  public_deps = [
    ":container_memory",
    ":raw_hash_set",
    "../base:throw_delegate",
  ]
}

# Generated from //absl/container:raw_hash_set
pw_source_set("raw_hash_set") {
  public = [
    "$dir_pw_third_party_abseil_cpp/absl/container/internal/raw_hash_set.h",
  ]
  sources = [
    "$dir_pw_third_party_abseil_cpp/absl/container/internal/raw_hash_set.cc",
  ]
  public_configs = [ "../..:abseil_cpp_public_config1" ]
  configs = [
    "../../configs:internal_disabled_warnings",
    "../..:abseil_cpp_config1",
  ]
  remove_configs = [ "$dir_pw_fuzzer:instrumentation" ]
  public_deps = [
    ":common",
    ":compressed_tuple",
    ":container_memory",
    ":hash_policy_traits",
    ":hashtable_debug_hooks",
    ":hashtablez_sampler",
    "../base:config",
    "../base:core_headers",
    "../base:dynamic_annotations",
    "../base:endian",
    "../base:prefetch",
    "../base:raw_logging_internal",
    "../hash",
    "../memory",
    "../meta:type_traits",
    "../numeric:bits",
    "../utility",
  ]
}
