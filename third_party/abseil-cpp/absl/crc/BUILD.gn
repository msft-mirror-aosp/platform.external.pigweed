# Copyright 2023 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

# DO NOT MANUALLY EDIT!
# This file was automatically generated by pw_build/gn_writer.py
# It contains GN build targets for absl/crc.

import("//build_overrides/pigweed.gni")

import("$dir_pw_build/target_types.gni")
import("$dir_pw_third_party/abseil-cpp/abseil-cpp.gni")

# Generated from //absl/crc:cpu_detect
pw_source_set("cpu_detect") {
  visibility = [ ":*" ]
  public = [ "$dir_pw_third_party_abseil_cpp/absl/crc/internal/cpu_detect.h" ]
  sources = [ "$dir_pw_third_party_abseil_cpp/absl/crc/internal/cpu_detect.cc" ]
  public_configs = [ "../..:abseil_cpp_public_config1" ]
  configs = [
    "../../configs:internal_disabled_warnings",
    "../..:abseil_cpp_config1",
  ]
  remove_configs = [ "$dir_pw_fuzzer:instrumentation" ]
  public_deps = [
    "../base",
    "../base:config",
  ]
}

# Generated from //absl/crc:crc32c
pw_source_set("crc32c") {
  public = [
    "$dir_pw_third_party_abseil_cpp/absl/crc/crc32c.h",
    "$dir_pw_third_party_abseil_cpp/absl/crc/internal/crc32c.h",
    "$dir_pw_third_party_abseil_cpp/absl/crc/internal/crc_memcpy.h",
  ]
  sources = [
    "$dir_pw_third_party_abseil_cpp/absl/crc/crc32c.cc",
    "$dir_pw_third_party_abseil_cpp/absl/crc/internal/crc32c_inline.h",
    "$dir_pw_third_party_abseil_cpp/absl/crc/internal/crc_memcpy_fallback.cc",
    "$dir_pw_third_party_abseil_cpp/absl/crc/internal/crc_memcpy_x86_64.cc",
    "$dir_pw_third_party_abseil_cpp/absl/crc/internal/crc_non_temporal_memcpy.cc",
  ]
  public_configs = [ "../..:abseil_cpp_public_config1" ]
  configs = [
    "../../configs:internal_disabled_warnings",
    "../..:abseil_cpp_config1",
  ]
  remove_configs = [ "$dir_pw_fuzzer:instrumentation" ]
  public_deps = [
    ":cpu_detect",
    ":crc_internal",
    ":non_temporal_memcpy",
    "../base:config",
    "../base:core_headers",
    "../base:dynamic_annotations",
    "../base:endian",
    "../base:prefetch",
    "../strings",
  ]
}

# Generated from //absl/crc:crc_cord_state
pw_source_set("crc_cord_state") {
  visibility = [
    ":*",
    "../strings:*",
  ]
  public =
      [ "$dir_pw_third_party_abseil_cpp/absl/crc/internal/crc_cord_state.h" ]
  sources =
      [ "$dir_pw_third_party_abseil_cpp/absl/crc/internal/crc_cord_state.cc" ]
  public_configs = [ "../..:abseil_cpp_public_config1" ]
  configs = [
    "../../configs:internal_disabled_warnings",
    "../..:abseil_cpp_config1",
  ]
  remove_configs = [ "$dir_pw_fuzzer:instrumentation" ]
  public_deps = [
    ":crc32c",
    "../base:config",
    "../numeric:bits",
    "../strings",
  ]
}

# Generated from //absl/crc:crc_internal
pw_source_set("crc_internal") {
  visibility = [ ":*" ]
  public = [
    "$dir_pw_third_party_abseil_cpp/absl/crc/internal/crc.h",
    "$dir_pw_third_party_abseil_cpp/absl/crc/internal/crc32_x86_arm_combined_simd.h",
  ]
  sources = [
    "$dir_pw_third_party_abseil_cpp/absl/crc/internal/crc.cc",
    "$dir_pw_third_party_abseil_cpp/absl/crc/internal/crc_internal.h",
    "$dir_pw_third_party_abseil_cpp/absl/crc/internal/crc_x86_arm_combined.cc",
  ]
  public_configs = [ "../..:abseil_cpp_public_config1" ]
  configs = [
    "../../configs:internal_disabled_warnings",
    "../..:abseil_cpp_config1",
  ]
  remove_configs = [ "$dir_pw_fuzzer:instrumentation" ]
  public_deps = [
    ":cpu_detect",
    "../base",
    "../base:config",
    "../base:core_headers",
    "../base:dynamic_annotations",
    "../base:endian",
    "../base:prefetch",
    "../base:raw_logging_internal",
    "../memory",
    "../numeric:bits",
  ]
}

# Generated from //absl/crc:non_temporal_arm_intrinsics
pw_source_set("non_temporal_arm_intrinsics") {
  visibility = [ ":*" ]
  public = [ "$dir_pw_third_party_abseil_cpp/absl/crc/internal/non_temporal_arm_intrinsics.h" ]
  public_configs = [ "../..:abseil_cpp_public_config1" ]
  configs = [
    "../../configs:internal_disabled_warnings",
    "../..:abseil_cpp_config1",
  ]
  remove_configs = [ "$dir_pw_fuzzer:instrumentation" ]
  public_deps = [ "../base:config" ]
}

# Generated from //absl/crc:non_temporal_memcpy
pw_source_set("non_temporal_memcpy") {
  visibility = [ ":*" ]
  public = [
    "$dir_pw_third_party_abseil_cpp/absl/crc/internal/non_temporal_memcpy.h",
  ]
  public_configs = [ "../..:abseil_cpp_public_config1" ]
  configs = [
    "../../configs:internal_disabled_warnings",
    "../..:abseil_cpp_config1",
  ]
  remove_configs = [ "$dir_pw_fuzzer:instrumentation" ]
  public_deps = [
    ":non_temporal_arm_intrinsics",
    "../base:config",
    "../base:core_headers",
  ]
}
